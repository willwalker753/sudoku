{"version":3,"sources":["webpack:///../src/index.js","webpack:///./components/board/board.css","webpack:///./components/board/index.js","webpack:///./components/generatePuzzle/index.js","webpack:///./routes/home/style.css","webpack:///./routes/home/index.js"],"names":["getHookState","index","type","options","currentComponent","currentHook","hooks","__","__h","length","push","__V","EMPTY","useState","initialState","reducer","init","hookState","currentIndex","_reducer","invokeOrReturn","action","nextValue","setState","useReducer","useEffect","callback","args","state","argsChanged","_pendingArgs","useLayoutEffect","flushAfterPaintEffects","component","afterPaintEffects","shift","forEach","invokeCleanup","invokeEffect","e","hook","comp","cleanup","oldArgs","newArgs","some","arg","f","previousComponent","prevRaf","oldBeforeDiff","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","vnode","hookItem","undefined","c","requestAnimationFrame","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","commitQueue","filter","cb","hasErrored","s","Board","rows","boxes","setBoxes","newBoxes","b","r","value","row","rowIndex","col","colIndex","boxIndex","Math","floor","className","board","map","box","boxRow","boxRowIndex","cell","cellIndex","_getInitRows","i","rowsInit","rowClone","structuredClone","_getCellCoordList","cellCoordList","_shuffleArr","_addClue","cellCoord","clueList","_getRandNumArr","_isClueValid","console","log","cellValue","startRow","startCol","_getBoxCoords","arr","randI","random","Home","boardRows","setBoardRows","generatePuzzle","class","style"],"mappings":"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","file":"route-home.chunk.7fa97.esm.js","sourcesContent":["import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"board\":\"board__mny7c\",\"box\":\"box__hjkUJ\",\"boxRow\":\"boxRow__SaN7o\",\"boxRow0\":\"boxRow0__5ziKY\",\"boxRow1\":\"boxRow1__WsfHv\",\"cell\":\"cell__5zeaz\",\"cell0\":\"cell0__C4hEn\",\"cell1\":\"cell1__0Urfr\"};","import { h } from 'preact';\nimport { Link } from 'preact-router/match';\nimport { useEffect, useState, useLayoutEffect } from 'preact/hooks';\nimport baseroute from '../../baseroute';\nimport board from './board.css';\n\n// Returns a sudoku board\n// props\n// \trows = [\n//      [\n// \t\t\t{\n// \t\t\t\tvalue: 2\n// \t\t\t},\n// \t\t\t...\n//      ],\n//      ...\n// \t]\nconst Board = ({ rows }) => {\n\tconst [ boxes, setBoxes ] = useState([]);\n\t// \t[ [{ value: 1 }, { value: 2 }, { value: 3 }], [{ value: 4 }, { value: 5 }, { value: 6 }], [{ value: 7 }, { value: 8 }, { value: 9 }] ],\n\t// \t[ [{ value: 1 }, { value: 2 }, { value: 3 }], [{ value: 4 }, { value: 5 }, { value: 6 }], [{ value: 7 }, { value: 8 }, { value: 9 }] ],\n\t// \t[ [{ value: 1 }, { value: 2 }, { value: 3 }], [{ value: 4 }, { value: 5 }, { value: 6 }], [{ value: 7 }, { value: 8 }, { value: 9 }] ],\n\t// \t[ [{ value: 1 }, { value: 2 }, { value: 3 }], [{ value: 4 }, { value: 5 }, { value: 6 }], [{ value: 7 }, { value: 8 }, { value: 9 }] ],\n\t// \t[ [{ value: 1 }, { value: 2 }, { value: 3 }], [{ value: 4 }, { value: 5 }, { value: 6 }], [{ value: 7 }, { value: 8 }, { value: 9 }] ],\n\t// \t[ [{ value: 1 }, { value: 2 }, { value: 3 }], [{ value: 4 }, { value: 5 }, { value: 6 }], [{ value: 7 }, { value: 8 }, { value: 9 }] ],\n\t// \t[ [{ value: 1 }, { value: 2 }, { value: 3 }], [{ value: 4 }, { value: 5 }, { value: 6 }], [{ value: 7 }, { value: 8 }, { value: 9 }] ],\n\t// \t[ [{ value: 1 }, { value: 2 }, { value: 3 }], [{ value: 4 }, { value: 5 }, { value: 6 }], [{ value: 7 }, { value: 8 }, { value: 9 }] ],\n\t// \t[ [{ value: 1 }, { value: 2 }, { value: 3 }], [{ value: 4 }, { value: 5 }, { value: 6 }], [{ value: 7 }, { value: 8 }, { value: 9 }] ],\n\t// ]);\n\n\tuseLayoutEffect(() => {\n\t\t// generate default box array\n\t\tlet newBoxes = [];\n\t\tfor (let b=0; b<9; b++) {\n\t\t\tnewBoxes.push([]);\n\t\t\tfor (let r=0; r<9/3; r++) {\n\t\t\t\tnewBoxes[b].push([]);\n\t\t\t\tfor (let c=0; c<9/3; c++) {\n\t\t\t\t\tnewBoxes[b][r].push({\n\t\t\t\t\t\tvalue: 0\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsetBoxes(newBoxes);\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (rows.length === 0) return;\n\n\t\t// format rows prop to boxes\n\t\tlet newBoxes = [ ...boxes ];\n\t\trows.forEach((row, rowIndex) => {\n\t\t\trow.forEach((col, colIndex) => {\n\t\t\t\tconst boxIndex = (Math.floor(rowIndex / 3) * 3) + (Math.floor(colIndex / 3));\n\t\t\t\tconst boxRowIndex = rowIndex % 3;\n\t\t\t\tconst boxColIndex = colIndex % 3;\n\t\t\t\tnewBoxes[boxIndex][boxRowIndex][boxColIndex].value = col.value;\n\t\t\t});\n\t\t});\n\t\tsetBoxes(newBoxes);\n\t}, [rows])\n\n\treturn (\n\t\t<div className={board.board}>\n\t\t\t{boxes.map(box => {\n\t\t\t\treturn (\n\t\t\t\t\t<div className={board.box}>\n\t\t\t\t\t\t{box.map((boxRow, boxRowIndex) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className={`${board.boxRow} ${board['boxRow' + boxRowIndex]}`}>\n\t\t\t\t\t\t\t\t\t{boxRow.map((cell, cellIndex) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<div className={`${board.cell} ${board['cell' + cellIndex]}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t{cell.value > 0 ? cell.value : null}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n\t\n}\n\nexport default Board;\n","// Generate a sudoku puzzle\n\n// Returns an array of rows (top to bottom)\n//      Each row has an array of cells (left to right)\n//      Cells can be clues (int 1 to 9) or empty (int 0)\nexport const generatePuzzle = () => {\n    const clueCount = 81;\n\n    let rows = _getInitRows();\n    let cellCoordList = _getCellCoordList();\n\n    for(let c=0; c<clueCount; c++) {\n        rows = _addClue(rows, cellCoordList[c]);\n    }\n\n\n\n\n\n\n\n\n    // need to implement backtracking\n        // keep track of the numbers tried for a square\n        // if 1-9 doesnt work for a cell, go back and change cells to untried numbers\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    return rows;\n}\n\n// Returns the initial rows data\nconst _getInitRows = () => {\n    let row = [];\n    for (let i = 0; i < 9; i++) {\n        row.push({\n            value: 0\n        });\n    }\n    let rowsInit = [];\n    for (let i = 0; i < 9; i++) {\n        const rowClone = structuredClone(row)\n        rowsInit.push(rowClone);\n    }\n    return rowsInit;\n}\n\n// Returns shuffled array of all cell coordinates\nconst _getCellCoordList = () => {\n    const size = 9;\n    let cellCoordList = [];\n    for (let r=0; r<size; r++) {\n        for (let c=0; c<size; c++) {\n            cellCoordList.push({\n                row: r,\n                col: c\n            });\n        }\n    }\n    cellCoordList = _shuffleArr(cellCoordList);\n    return cellCoordList;\n}\n\n// Handle adding a clue to a cell\n// Args\n//      row array\n//      cellCoord => { row: 5, col: 3 }\nconst _addClue = (rows, cellCoord) => {\n    const clueList = _getRandNumArr();\n    const rowIndex = cellCoord.row;\n    const colIndex = cellCoord.col;\n\n    for (let c=0; c<clueList.length; c++) {\n        if (_isClueValid(rows, rowIndex, colIndex, clueList[c])) {\n            rows[rowIndex][colIndex].value = clueList[c];\n            return rows;\n        }\n    }\n\n    console.log(\"Need to backtrack here: \", rows, rowIndex, colIndex, clueList)\n    return rows;\n    \n}\n\nconst _isClueValid = (rows, rowIndex, cellIndex, cellValue) => {\n    // check column\n    for (let r=0; r<rows.length; r++) {\n        if (rows[r][cellIndex].value === cellValue) {\n            return false;\n        }\n    }\n\n    // check row\n    for (let c=0; c<rows.length; c++) {\n        if (rows[rowIndex][c].value === cellValue) {\n            return false;\n        }\n    }\n\n    // check box\n    const { startRow, startCol } = _getBoxCoords(rowIndex, cellIndex);\n    for (let r=startRow; r<startRow+3; r++) {\n        for (let c=startCol; c<startCol+3; c++) {\n            if (rows[r][c].value === cellValue) {\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\n// Returns an array of numbers 1 to 9 in a pseudorandom order\nconst _getRandNumArr = () => {\n    const numArr = [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ];\n    const numArrShuffled = _shuffleArr(numArr);\n    return numArrShuffled;\n}\n\n// Randomize array order using Fisher-Yates Shuffle\nconst _shuffleArr = (arr) => {\n    for (let i=arr.length; i > 0; i--) {\n        const randI = Math.floor(Math.random() * i);\n        [arr[i - 1], arr[randI]] = [\n            arr[randI], arr[i - 1]\n        ];\n    }\n    return arr;\n}\n\n// Returns the box coords for a given cell\nconst _getBoxCoords = (rowIndex, cellIndex) => {\n    const size = 9;\n    const startRow = rowIndex - (rowIndex % (size/3));\n    const startCol = cellIndex - (cellIndex % (size/3));\n    return {\n        startRow,\n        startCol\n    }\n}","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"home__uRcqa\"};","import { h } from 'preact';\nimport { useEffect, useState } from \"preact/hooks\";\nimport Board from '/components/board';\nimport { generatePuzzle } from '/components/generatePuzzle';\nimport style from '/routes/home/style.css';\n\nconst Home = () => {\n\tconst [ boardRows, setBoardRows ] = useState([]);\n\n\tuseEffect(() => {\n\t\tsetBoardRows(\n\t\t\tgeneratePuzzle()\n\t\t);\n\t}, [])\n\n\treturn (\n\t\t<div class={style.home}>\n\t\t\t<Board rows={boardRows} />\n\t\t</div>\n\t)\n};\n\nexport default Home;\n"],"sourceRoot":""}